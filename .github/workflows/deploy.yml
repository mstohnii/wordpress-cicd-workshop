name: Deploy to AKS

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.19.0'

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} \
            --name ${{ secrets.AKS_CLUSTER_NAME }} \
            --overwrite-existing

      - name: Deploy inline (Helm)
        run: |
          set -euo pipefail
          NAMESPACE=${NAMESPACE:-wordpress}
          RELEASE_NAME=${RELEASE_NAME:-wordpress}
          CHART_PATH=${CHART_PATH:-./helm/wordpress}
          TIMEOUT=${TIMEOUT:-10m}

          echo "Creating namespace if needed: ${NAMESPACE}"
          kubectl create namespace "${NAMESPACE}" --dry-run=client -o yaml | kubectl apply -f -

          echo "Deploying Helm release '${RELEASE_NAME}'"
          helm upgrade --install "${RELEASE_NAME}" "${CHART_PATH}" \
            --namespace "${NAMESPACE}" \
            --create-namespace \
            --wait \
            --timeout "${TIMEOUT}"

          echo "Objects in namespace: ${NAMESPACE}"
          kubectl get all -n "${NAMESPACE}"
          kubectl get svc -n "${NAMESPACE}"

